use Tygron as mas.
use dummy as knowledge.
use tygron as module.
use somegoal as goals.

timeout = 300.

test tygron with
	pre{true}
	in{ 
		
		%If a percept is perceived, insert it.
		percept(my_stakeholder_id(StakeholderID)) leadsto bel(my_stakeholder_id(StakeholderID)).
		
		%If a percept list is perceived, then for every member of the list, check if it is inserted as belief.
		%These tests have been made according to the templates in the GOAL Programming guide.
		percept(indicators(List)),bel(member(indicator(IndicatorID,Current,Target,ZoneIndicatorsList),List)) 
			leadsto bel(indicator(IndicatorID,Current,Target,ZoneIndicatorsList)).
		percept(zones(List)), bel(member(zone(ZoneID,Name,Floors,Size,CategoriesList),List)) 
			leadsto bel(zone(ZoneID,Name,Floors,Size,CategoriesList)).
		percept(buildings(List)), bel(member(building(BuildingID,Name,OwnerID,ConstructionYear,CategoriesList,FuncID,Floors),List)) 
			leadsto bel(building(BuildingID,Name,OwnerID,ConstructionYear,CategoriesList,FuncID,Floors))).
		percept(stakeholders(List)), bel(member(SubList, List), 
			member(stakeholder(StakeholderID,Name,StartBudget,Income), SubList)))) 
			leadsto bel(stakeholder(StakeholderID,Name,StartBudget,Income)).
		percept(stakeholders(List)), bel(member(SubList, List), 
			member(indicatorLink(StakeholderID,IndWeights), SubList)))) 
			leadsto bel(indicatorLink(StakeholderID,IndWeights)).
		percept(action_logs(ActList)), bel(member(actionlog(StakeholderID,Description,ActionID,IncList),ActList))
			leadsto bel(actionlog(StakeholderID,Description,ActionID,IncList)).
		percept(functions(FuncList)), bel(member([FuncName,FuncID,CategoriesList], FuncList))
			leadsto bel(function(FuncName,FuncID,CategoriesList)).
		
		%If a percept list is perceived, which doesn't contain a percept which we first belief was true, delete that belief.
		%These tests have been made according to the templates in the GOAL Programming guide.
		percept(buildings(List)), bel(building(ID,Name,OwnerID,ConstructionYear,CategoriesList,FuncID,Floors),
			not(member(building(BuildingID,Name,OwnerID,ConstructionYear,CategoriesList,FuncID,Floors),List)))
			leadsto not(bel(building(BuildingID,Name,OwnerID,ConstructionYear,CategoriesList,Floors))).
				
		percept(action_logs(ActList)), bel(actionlog(StakeholderID,Description,ActionID,IncList),
			not(member(actionlog(StakeholderID,Description,ActionID,IncList), ActList)))
			leadsto not(bel(actionlog(StakeholderID,Description,ActionID,IncList))).
			
		%There are some beliefs that should never be deleted. These tests make sure that never happens.
		always(bel(my_stakeholder_id(_))).

	}
	post{true}		
	
	tygron {
		do tygron.
	}
